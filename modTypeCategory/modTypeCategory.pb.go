// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: modTypeCategory/modTypeCategory.proto

package service_ModTypeCategory

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModTypeCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	ModTypeID string `protobuf:"bytes,3,opt,name=ModTypeID,proto3" json:"ModTypeID,omitempty"`
}

func (x *ModTypeCategory) Reset() {
	*x = ModTypeCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modTypeCategory_modTypeCategory_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModTypeCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModTypeCategory) ProtoMessage() {}

func (x *ModTypeCategory) ProtoReflect() protoreflect.Message {
	mi := &file_modTypeCategory_modTypeCategory_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModTypeCategory.ProtoReflect.Descriptor instead.
func (*ModTypeCategory) Descriptor() ([]byte, []int) {
	return file_modTypeCategory_modTypeCategory_proto_rawDescGZIP(), []int{0}
}

func (x *ModTypeCategory) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ModTypeCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModTypeCategory) GetModTypeID() string {
	if x != nil {
		return x.ModTypeID
	}
	return ""
}

// GetModTypeCategoryByID
type GetModTypeCategoryByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetModTypeCategoryByIDRequest) Reset() {
	*x = GetModTypeCategoryByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modTypeCategory_modTypeCategory_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModTypeCategoryByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModTypeCategoryByIDRequest) ProtoMessage() {}

func (x *GetModTypeCategoryByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modTypeCategory_modTypeCategory_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModTypeCategoryByIDRequest.ProtoReflect.Descriptor instead.
func (*GetModTypeCategoryByIDRequest) Descriptor() ([]byte, []int) {
	return file_modTypeCategory_modTypeCategory_proto_rawDescGZIP(), []int{1}
}

func (x *GetModTypeCategoryByIDRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetModTypeCategoryByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModTypeCategory *ModTypeCategory `protobuf:"bytes,1,opt,name=ModTypeCategory,proto3" json:"ModTypeCategory,omitempty"`
}

func (x *GetModTypeCategoryByIDResponse) Reset() {
	*x = GetModTypeCategoryByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modTypeCategory_modTypeCategory_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModTypeCategoryByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModTypeCategoryByIDResponse) ProtoMessage() {}

func (x *GetModTypeCategoryByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_modTypeCategory_modTypeCategory_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModTypeCategoryByIDResponse.ProtoReflect.Descriptor instead.
func (*GetModTypeCategoryByIDResponse) Descriptor() ([]byte, []int) {
	return file_modTypeCategory_modTypeCategory_proto_rawDescGZIP(), []int{2}
}

func (x *GetModTypeCategoryByIDResponse) GetModTypeCategory() *ModTypeCategory {
	if x != nil {
		return x.ModTypeCategory
	}
	return nil
}

// GetModTypeCategoriesByModTypeID
type GetModTypeCategoriesByModTypeIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModTypeID string `protobuf:"bytes,1,opt,name=ModTypeID,proto3" json:"ModTypeID,omitempty"`
}

func (x *GetModTypeCategoriesByModTypeIDRequest) Reset() {
	*x = GetModTypeCategoriesByModTypeIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modTypeCategory_modTypeCategory_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModTypeCategoriesByModTypeIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModTypeCategoriesByModTypeIDRequest) ProtoMessage() {}

func (x *GetModTypeCategoriesByModTypeIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modTypeCategory_modTypeCategory_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModTypeCategoriesByModTypeIDRequest.ProtoReflect.Descriptor instead.
func (*GetModTypeCategoriesByModTypeIDRequest) Descriptor() ([]byte, []int) {
	return file_modTypeCategory_modTypeCategory_proto_rawDescGZIP(), []int{3}
}

func (x *GetModTypeCategoriesByModTypeIDRequest) GetModTypeID() string {
	if x != nil {
		return x.ModTypeID
	}
	return ""
}

type GetModTypeCategoriesByModTypeIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModTypeCategories []*ModTypeCategory `protobuf:"bytes,1,rep,name=ModTypeCategories,proto3" json:"ModTypeCategories,omitempty"`
}

func (x *GetModTypeCategoriesByModTypeIDResponse) Reset() {
	*x = GetModTypeCategoriesByModTypeIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modTypeCategory_modTypeCategory_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModTypeCategoriesByModTypeIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModTypeCategoriesByModTypeIDResponse) ProtoMessage() {}

func (x *GetModTypeCategoriesByModTypeIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_modTypeCategory_modTypeCategory_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModTypeCategoriesByModTypeIDResponse.ProtoReflect.Descriptor instead.
func (*GetModTypeCategoriesByModTypeIDResponse) Descriptor() ([]byte, []int) {
	return file_modTypeCategory_modTypeCategory_proto_rawDescGZIP(), []int{4}
}

func (x *GetModTypeCategoriesByModTypeIDResponse) GetModTypeCategories() []*ModTypeCategory {
	if x != nil {
		return x.ModTypeCategories
	}
	return nil
}

// GetModTypeCategories
type GetModTypeCategoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetModTypeCategoriesRequest) Reset() {
	*x = GetModTypeCategoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modTypeCategory_modTypeCategory_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModTypeCategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModTypeCategoriesRequest) ProtoMessage() {}

func (x *GetModTypeCategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modTypeCategory_modTypeCategory_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModTypeCategoriesRequest.ProtoReflect.Descriptor instead.
func (*GetModTypeCategoriesRequest) Descriptor() ([]byte, []int) {
	return file_modTypeCategory_modTypeCategory_proto_rawDescGZIP(), []int{5}
}

type GetModTypeCategoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModTypeCategories []*ModTypeCategory `protobuf:"bytes,1,rep,name=ModTypeCategories,proto3" json:"ModTypeCategories,omitempty"`
}

func (x *GetModTypeCategoriesResponse) Reset() {
	*x = GetModTypeCategoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modTypeCategory_modTypeCategory_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModTypeCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModTypeCategoriesResponse) ProtoMessage() {}

func (x *GetModTypeCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_modTypeCategory_modTypeCategory_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModTypeCategoriesResponse.ProtoReflect.Descriptor instead.
func (*GetModTypeCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_modTypeCategory_modTypeCategory_proto_rawDescGZIP(), []int{6}
}

func (x *GetModTypeCategoriesResponse) GetModTypeCategories() []*ModTypeCategory {
	if x != nil {
		return x.ModTypeCategories
	}
	return nil
}

var File_modTypeCategory_modTypeCategory_proto protoreflect.FileDescriptor

var file_modTypeCategory_modTypeCategory_proto_rawDesc = []byte{
	0x0a, 0x25, 0x6d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x2f, 0x6d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x6d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x22, 0x53, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x6f, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x22, 0x2f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x74, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0f, 0x4d, 0x6f, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x46, 0x0a, 0x26,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x6f, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x22, 0x81, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x4d,
	0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x56, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x6f,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x11, 0x4d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x76, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x11, 0x4d, 0x6f,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x32,
	0xd1, 0x03, 0x0a, 0x16, 0x4d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x42, 0x79, 0x49, 0x44, 0x12, 0x36, 0x2e, 0x6d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e,
	0x6d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa4, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42,
	0x79, 0x4d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x3f, 0x2e, 0x6d, 0x6f, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x6d, 0x6f,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x34, 0x2e, 0x6d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6d,
	0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x52, 0x69, 0x6b, 0x56, 0x61, 0x6e, 0x48, 0x61, 0x61, 0x72, 0x65, 0x6e, 0x2f, 0x4d,
	0x78, 0x42, 0x69, 0x6b, 0x65, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_modTypeCategory_modTypeCategory_proto_rawDescOnce sync.Once
	file_modTypeCategory_modTypeCategory_proto_rawDescData = file_modTypeCategory_modTypeCategory_proto_rawDesc
)

func file_modTypeCategory_modTypeCategory_proto_rawDescGZIP() []byte {
	file_modTypeCategory_modTypeCategory_proto_rawDescOnce.Do(func() {
		file_modTypeCategory_modTypeCategory_proto_rawDescData = protoimpl.X.CompressGZIP(file_modTypeCategory_modTypeCategory_proto_rawDescData)
	})
	return file_modTypeCategory_modTypeCategory_proto_rawDescData
}

var file_modTypeCategory_modTypeCategory_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_modTypeCategory_modTypeCategory_proto_goTypes = []interface{}{
	(*ModTypeCategory)(nil),                         // 0: modTypeCategory_service.ModTypeCategory
	(*GetModTypeCategoryByIDRequest)(nil),           // 1: modTypeCategory_service.GetModTypeCategoryByIDRequest
	(*GetModTypeCategoryByIDResponse)(nil),          // 2: modTypeCategory_service.GetModTypeCategoryByIDResponse
	(*GetModTypeCategoriesByModTypeIDRequest)(nil),  // 3: modTypeCategory_service.GetModTypeCategoriesByModTypeIDRequest
	(*GetModTypeCategoriesByModTypeIDResponse)(nil), // 4: modTypeCategory_service.GetModTypeCategoriesByModTypeIDResponse
	(*GetModTypeCategoriesRequest)(nil),             // 5: modTypeCategory_service.GetModTypeCategoriesRequest
	(*GetModTypeCategoriesResponse)(nil),            // 6: modTypeCategory_service.GetModTypeCategoriesResponse
}
var file_modTypeCategory_modTypeCategory_proto_depIdxs = []int32{
	0, // 0: modTypeCategory_service.GetModTypeCategoryByIDResponse.ModTypeCategory:type_name -> modTypeCategory_service.ModTypeCategory
	0, // 1: modTypeCategory_service.GetModTypeCategoriesByModTypeIDResponse.ModTypeCategories:type_name -> modTypeCategory_service.ModTypeCategory
	0, // 2: modTypeCategory_service.GetModTypeCategoriesResponse.ModTypeCategories:type_name -> modTypeCategory_service.ModTypeCategory
	1, // 3: modTypeCategory_service.ModTypeCategoryService.GetModTypeCategoryByID:input_type -> modTypeCategory_service.GetModTypeCategoryByIDRequest
	3, // 4: modTypeCategory_service.ModTypeCategoryService.GetModTypeCategoriesByModTypeID:input_type -> modTypeCategory_service.GetModTypeCategoriesByModTypeIDRequest
	5, // 5: modTypeCategory_service.ModTypeCategoryService.GetModTypeCategories:input_type -> modTypeCategory_service.GetModTypeCategoriesRequest
	2, // 6: modTypeCategory_service.ModTypeCategoryService.GetModTypeCategoryByID:output_type -> modTypeCategory_service.GetModTypeCategoryByIDResponse
	4, // 7: modTypeCategory_service.ModTypeCategoryService.GetModTypeCategoriesByModTypeID:output_type -> modTypeCategory_service.GetModTypeCategoriesByModTypeIDResponse
	6, // 8: modTypeCategory_service.ModTypeCategoryService.GetModTypeCategories:output_type -> modTypeCategory_service.GetModTypeCategoriesResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_modTypeCategory_modTypeCategory_proto_init() }
func file_modTypeCategory_modTypeCategory_proto_init() {
	if File_modTypeCategory_modTypeCategory_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_modTypeCategory_modTypeCategory_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModTypeCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modTypeCategory_modTypeCategory_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModTypeCategoryByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modTypeCategory_modTypeCategory_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModTypeCategoryByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modTypeCategory_modTypeCategory_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModTypeCategoriesByModTypeIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modTypeCategory_modTypeCategory_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModTypeCategoriesByModTypeIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modTypeCategory_modTypeCategory_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModTypeCategoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modTypeCategory_modTypeCategory_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModTypeCategoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_modTypeCategory_modTypeCategory_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_modTypeCategory_modTypeCategory_proto_goTypes,
		DependencyIndexes: file_modTypeCategory_modTypeCategory_proto_depIdxs,
		MessageInfos:      file_modTypeCategory_modTypeCategory_proto_msgTypes,
	}.Build()
	File_modTypeCategory_modTypeCategory_proto = out.File
	file_modTypeCategory_modTypeCategory_proto_rawDesc = nil
	file_modTypeCategory_modTypeCategory_proto_goTypes = nil
	file_modTypeCategory_modTypeCategory_proto_depIdxs = nil
}
